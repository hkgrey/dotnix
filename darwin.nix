{ pkgs, pkgsUnstable, lib, config, ... }:
let

in
{
  ##################################################################################################
  ### Configuring Nix + Nix-Darwin
  ##################################################################################################

  # The platform the configuration will be used on.
  nixpkgs.hostPlatform = "aarch64-darwin";

  # Used for backwards compatibility, please read the changelog before changing.
  # $ darwin-rebuild changelog
  system.stateVersion = 4;

  #   The default Nix build user group ID was changed from 30000 to 350.
  # You are currently managing Nix build users with nix-darwin, but your
  # nixbld group has GID 350, whereas we expected 30000.
  # 
  # Possible causes include setting up a new Nix installation with an
  # existing nix-darwin configuration, setting up a new nix-darwin
  # installation with an existing Nix installation, or manually increasing
  # your `system.stateVersion` setting.
  # 
  # You can set the configured group ID to match the actual value:
  # 
  #     ids.gids.nixbld = 350;
  # 
  # We do not recommend trying to change the group ID with macOS user
  # management tools without a complete uninstallation and reinstallation
  # of Nix.
  ids.gids.nixbld = 350;

  # Auto upgrade nix package and the daemon service.
  nix.enable = true;
  nix = {
    package = pkgs.nixVersions.latest; # Per https://discourse.nixos.org/t/how-to-upgrade-nix-on-macos-with-home-manager/25147/4
    checkConfig = true;
    # nixPath = [
    #   { darwin-config = "$HOME/.nixpkgs/darwin-configuration.nix"; }
    #   "/nix/var/nix/profiles/per-user/root/channels"
    # ];
    
    optimise.automatic = true;

    settings = {
      # Generated by https://github.com/DeterminateSystems/nix-installer, version 0.6.0.
      "bash-prompt-prefix" = "(nix:$name)\040";
      "build-users-group" = "nixbld";
      "extra-nix-path" = "nixpkgs=flake:nixpkgs";
      "experimental-features" = "nix-command flakes";
      "max-jobs" = "auto";
      # "upgrade-nix-store-path-url" = "https://install.determinate.systems/nix-upgrade/stable/universal";

      # Manual Additions
      ## FIXME warning: ignoring untrusted substituter <blah>, you are not a trusted user.
      ## Run `man nix.conf` for more information on the `substituters` configuration option.
      "extra-trusted-substituters" = [
        "https://cache.nixos.org/"
        "https://iohk.cachix.org"
        "https://nix-community.cachix.org"
      ];
      "extra-trusted-public-keys" = [
        "cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY="
        "iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo="
        "nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs="
      ];
      trusted-users = [
        "root"
        "hkgrey"
      ];
    };
  };

  system.primaryUser = "hkgrey";

  users.users.hkgrey = {
    name = "hkgrey";
    home = "/Users/hkgrey";
  };

  # Create /etc/zshrc | /etc/bashrc that loads the nix-darwin environment.
  # FIXME `nix-darwin` can't set default shell
  programs.bash.enable = true;

  ##################################################################################################
  ### Package Management (via nixpkgs and homebrew)
  ##################################################################################################

  nixpkgs.config.allowUnfreePredicate = pkg: builtins.elem (lib.getName pkg) [
    # "blender"
    "raycast"
    "tableplus"
    "terraform"
    "vscode"
    "vscode-extension-MS-python-vscode-pylance"
    "Xcode.app"
  ];

  environment.variables = {
    DO_NOT_TRACK = "1";
  };

  # Provided by nixpkgs
  environment.systemPackages = [
    # vulnix FIXME Enable with overlay
  ] 
  ++ (with pkgsUnstable;
    [
      # devenv # easy nix project envs
      # mas # Mac App Store command line interface
      tbls # Tool for documenting sql databases (postgres + clickhouse support)
    ]
  )
    ++ (with pkgs;
    [
      config.nix.package # Per https://discourse.nixos.org/t/how-to-upgrade-nix-on-macos-with-home-manager/25147/4

      # GB
      mosh # https://mosh.org/#techinfo

      # Programming Languages and Environments
      go
      python313
      nodejs_24
      pipx
      uv

      # Linters + Formatters
      nixpkgs-fmt
      sqlfluff # SQL formatter that supports Postgres and ClickHouse
      treefmt # Runs all formatters

      # Infra
      k9s
      terraform

      # Data
      sqlcheck # SQL Anti-Pattern Linter
      tableplus # db client
      # python312Packages.sqlglot # SQL Parser (used in sqlmesh)

      # Data Store
      duckdb
      clickhouse
      postgresql_16
      # snowflake-cli  # bugged
      # snowsql # unsupported os/arch
      sqlite

      # Shell
      bashInteractive

      # CLI Programs
      bat # modern `cat`
      bottom # system monitoring
      dasht # cli for viewing dash docsets
      delta # for diff-ing
      # glances # system monitoring
      jc # convert cli command outputs to json
      procs # modern `ps`
      tldr # quick usage guide when you don't need the full manpages
      tree # visualize directory tree
      visidata # Excel for CLI

      # Nix-specific Tools
      cachix
      haskellPackages.nix-derivation
      nil # https://github.com/oxalica/nil#readme
      nix-direnv
      nix-info
      nix-tree
      nix-update # for pr-ing version updates to nixpkgs
      sbomnix

      # GUI Apps
      raycast # alfred/spotlight alternative, productivity tool

      # Other

      # Mac OS Setup - Scarf Deps - https://www.notion.so/scarf/Mac-OS-setup-...
      curlWithGnuTls
      wget
    ]);

  # Provided by nix-darwin.
  homebrew = {
    enable = true; # NOTE: Doesn't install homebrew. See https://daiderd.com/nix-darwin/manual/index.html#opt-homebrew.enable
    brews = lib.mkForce [
      # https://formulae.brew.sh/formula/{name}
      
      # Dev dependencies

      # Other
      # { name = "mas"; }
    ];
    casks = [
      "1password"
      "1password-cli"
      "blender"
      "dash"
      "docker" # for docker-desktop (dupe hosts issue in bi_stack)
      "firefox" # browser
      "little-snitch" # firewall
      "micro-snitch" # camera + mic monitor
      "mullvadvpn" # privacy vpn
      # "orbstack" # docker desktop alternative 
      # ^ Conflicts w/ "docker" cask - Error: It seems there is already a Binary at '/usr/local/bin/docker-credential-osxkeychain'
      "slack"
      "snowflake-snowsql"
      "zulip" # chat app
    ];
    masApps = {
      # "1Password for Safari" = 1569813296;
      # "Xcode" = 497799835;
    };
  };

  ##################################################################################################
  ### Mac OS System Settings
  ##################################################################################################

  ## See available configuration options at https://daiderd.com/nix-darwin/manual/index.html

  security.pam.services.sudo_local.touchIdAuth = true;

  system.defaults = {
    dock = {
      autohide = true;
      orientation = "bottom";
      persistent-apps = [
        "/Applications/Firefox.app"
        "/System/Applications/Mail.app"
        "/System/Applications/Utilities/Terminal.app"
        "${pkgs.raycast}/Applications/Raycast.app"
        "/Applications/Mullvad\ VPN.app" # via brew cask
        "${pkgs.vscode}/Applications/Visual\ Studio\ Code.app"
      ];
      show-process-indicators = true;
      show-recents = false;
      static-only = false;
    };
    finder = {
      AppleShowAllExtensions = true;
      ShowPathbar = true;
      FXPreferredViewStyle = "clmv"; # Finder View Options: “icnv” = Icon view (default), “Nlsv” = List view, “clmv” = Column View, “Flwv” = Gallery View
      _FXShowPosixPathInTitle = true; # show full posix filepath in window title
    };
    NSGlobalDomain = {
      "com.apple.swipescrolldirection" = false;
    };
  };

  # NOTE TO SELF: Set up "external unknown keyboard" in System Preferences > Keyboard > Modifier Keys: 
    #   - Command key -> Option
    #   - Option key -> Commmand
  system.keyboard = {
    enableKeyMapping = true;
    remapCapsLockToEscape = true;
  };

  ##################################################################################################
  ### Configurable Darwin Services + Packages
  ##################################################################################################

  ## See available configuration options at https://daiderd.com/nix-darwin/manual/index.html

  # TBD
  environment = {
    shellAliases = {
      ll = "ls -l";
      snowsql = "/Applications/SnowSQL.app/Contents/MacOS/snowsql";
    };
  };
}
